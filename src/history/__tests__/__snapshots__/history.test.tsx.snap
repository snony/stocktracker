// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`history component should render correctly 1`] = `
Array [
  .emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

@media screen and (max-width:600px) {
  .emotion-12 {
    -webkit-align-items: flex-end;
    -webkit-box-align: flex-end;
    -ms-flex-align: flex-end;
    align-items: flex-end;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

.emotion-4 + .emotion-4 {
  margin-left: 1.5rem;
}

.emotion-0 {
  background-color: transparent;
  border-color: transparent;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  outline: none;
  font-size: 0.9rem;
  margin: 0 0.3rem;
  color: white;
}

.emotion-1 {
  background-color: transparent;
  border-color: transparent;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  outline: none;
  font-size: 0.9rem;
  margin: 0 0.3rem;
}

<div
    className="emotion-12"
  >
    <div
      className="emotion-4"
    >
      <button
        className="emotion-0"
        onClick={[Function]}
        selected={true}
      >
        CLOSE
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        OPEN
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        HIGH
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        LOW
      </button>
    </div>
    <div
      className="emotion-4"
    >
      <button
        className="emotion-0"
        onClick={[Function]}
        selected={true}
      >
        YTD
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        1D
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        1M
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        6M
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        1Y
      </button>
      <button
        className="emotion-1"
        onClick={[Function]}
        selected={false}
      >
        5Y
      </button>
    </div>
  </div>,
  .emotion-0 {
  height: 420px;
  width: 99% !important;
}

<div
    className="emotion-0"
  >
    <div
      className="recharts-responsive-container"
      style={
        Object {
          "height": "100%",
          "maxHeight": undefined,
          "minHeight": undefined,
          "minWidth": undefined,
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "visibility": "hidden",
            "zIndex": -1,
          }
        }
      >
        <div
          onScroll={[Function]}
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
              "zIndex": -1,
            }
          }
        >
          <div
            style={
              Object {
                "height": NaN,
                "left": 0,
                "position": "absolute",
                "top": 0,
                "width": NaN,
              }
            }
          />
        </div>
        <div
          onScroll={[Function]}
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
              "visibility": "hidden",
              "zIndex": -1,
            }
          }
        >
          <div
            style={
              Object {
                "height": "200%",
                "left": 0,
                "position": "absolute",
                "top": 0,
                "width": "200%",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`history component should render correctly before initial fetch 1`] = `
.emotion-0 {
  color: white;
  display: block;
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
}

<span
  className="emotion-0"
>
  Loading...
</span>
`;

exports[`history component should render correctly on data fetch failed 1`] = `
.emotion-0 {
  color: white;
  display: block;
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
}

<span
  className="emotion-0"
>
  Failed to fetch stock history
</span>
`;

exports[`history component should render history chart correctly 1`] = `
<div
  className="recharts-responsive-container"
  style={
    Object {
      "height": "100%",
      "maxHeight": undefined,
      "minHeight": undefined,
      "minWidth": undefined,
      "width": "100%",
    }
  }
>
  <div
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "overflow": "hidden",
        "position": "absolute",
        "right": 0,
        "top": 0,
        "visibility": "hidden",
        "zIndex": -1,
      }
    }
  >
    <div
      onScroll={[Function]}
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "visibility": "hidden",
          "zIndex": -1,
        }
      }
    >
      <div
        style={
          Object {
            "height": NaN,
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": NaN,
          }
        }
      />
    </div>
    <div
      onScroll={[Function]}
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
          "visibility": "hidden",
          "zIndex": -1,
        }
      }
    >
      <div
        style={
          Object {
            "height": "200%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "200%",
          }
        }
      />
    </div>
  </div>
</div>
`;
